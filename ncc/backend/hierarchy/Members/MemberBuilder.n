using System;
using System.Diagnostics;
using Nemerle.Assertions;
using Nemerle.Collections;
using Nemerle.Compiler.Typedtree;
using Nemerle.Imperative;
using Nemerle.Utility;

using SR  = System.Reflection;
using SRE = System.Reflection.Emit;

namespace Nemerle.Compiler
{
  public abstract partial class MemberBuilder : MemberInfo, IMember, System.IEquatable[IMember], IBackendMember
  {
    protected mutable handle : SR.MemberInfo;

    GetHandle() : SR.MemberInfo
      implements IBackendMember.GetHandle
    { throw NotImplementedException() }

    internal abstract CreateEmitBuilder(emit_tb : SRE.TypeBuilder) : void;
  }
}
