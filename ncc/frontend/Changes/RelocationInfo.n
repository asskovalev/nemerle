using Nemerle.Assertions;
using Nemerle.Compiler;
using Nemerle.Imperative;
using Nemerle.Utility;
using Nemerle.Collections;
using Nemerle.Compiler.Parsetree;
using Nemerle.Compiler.Typedtree;

using System;
using System.Diagnostics;
using System.Linq;

using Typed = Nemerle.Compiler.Typedtree;
using SCG = System.Collections.Generic;

namespace Nemerle.Compiler
{
  public class RelocationInfo
  {
    public VisitedObjects : Hashtable[object, byte];
    public Changes        : IChanges;
    public FileIndex      : int;

    internal ReversedChanges : array[Change];

    public this(changes : IChanges)
    {
      FileIndex = changes.After.FileIndex;
      assert2(FileIndex == changes.Before.FileIndex);
      ReversedChanges     = changes.ReversedChanges;
      this.VisitedObjects = Hashtable();
    }

    override public ToString() : string
    {
      Changes.ToString()
    }
  }
}
