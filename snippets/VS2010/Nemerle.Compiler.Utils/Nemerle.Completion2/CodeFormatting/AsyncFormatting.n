using System;
using Nemerle.Collections;
using System.Collections.Generic;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Compiler;
using Nemerle.Completion2.Engine;
using Nemerle.Compiler.Utils.Async;
using SCG = System.Collections.Generic;

namespace Nemerle.Completion2.CodeFormatting
{
  [Record]
  public struct IndentInfo
  {
    public InsertTabs : bool;
    public IndentSize : int;
    public TabSize : int;
  }

  [Record (Exclude = [ResultType])]
  public class FormatterResult
  {
    [Accessor] _startLine : int = -1;
    [Accessor] _startCol : int = -1;
    [Accessor] _endLine : int = -1;
    [Accessor] _endCol : int  = -1;
    [Accessor] _replacementString : string = "";
  }

  public class FormattingAsyncRequest : AsyncRequest
  {
    public this(
      engine      : IIdeEngine,
      source      : IIdeSource,
      work        : Action[AsyncRequest],
      loc        : Location,
      pref       : IndentInfo)
    {
      base(AsyncRequestType.CodeFormatting, engine, source, work);
      this.pref  = pref;
      location   = loc;
    }

    [Accessor]
    location       : Location;

    [Accessor]
    pref           : IndentInfo;
    [Accessor(flags=WantSetter)]
    mutable result : SCG.List[FormatterResult];

  }
}
