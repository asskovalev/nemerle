using System.Console;
using Nemerle.Assertions;
using Nemerle.IO;

module M
{
  TestNotNullOrEmpty([NotNullOrEmpty] s : string) : void
  {
    WriteLine(s);
  }
  
  Main() : void
  {	
    System.Threading.Thread.CurrentThread.CurrentCulture = System.Globalization.CultureInfo.InvariantCulture;
    System.Threading.Thread.CurrentThread.CurrentUICulture = System.Globalization.CultureInfo.InvariantCulture;
    
    try
    {
      TestNotNullOrEmpty(null);
    }
    catch
    {
      | e is System.ArgumentException =>
        WriteLine(e.ParamName);

        def see       = ". See ";
        def msg       = e.Message;
        def seeIndex  = msg.IndexOf(see);
        def pos       = @"positive\";
        def posIndex  = msg.IndexOf(pos);
      
        print (msg.Substring(0, seeIndex + see.Length) + msg.Substring(posIndex) + "\n");        
    }
   
    try
    {
      TestNotNullOrEmpty("");
    }
    catch
    {
      | e is System.ArgumentException =>
        WriteLine(e.ParamName);
        
        def see2       = ". See ";
        def msg        = e.Message;
        def seeIndex2  = msg.IndexOf(see2);
        def pos2       = @"positive\";
        def posIndex2  = msg.IndexOf(pos2);
      
        print(msg.Substring(0, seeIndex2 + see2.Length) + msg.Substring(posIndex2) + "\n");
    }
    
    // Must not throw
    TestNotNullOrEmpty("a");
  }
}

/*
BEGIN-OUTPUT
s
The ``NotNullOrEmpty'' contract of parameter ``s'' has been violated. See positive\notnullorempty.n(7,23,7,37).
Parameter name: s
s
The ``NotNullOrEmpty'' contract of parameter ``s'' has been violated. See positive\notnullorempty.n(7,23,7,37).
Parameter name: s
a
END-OUTPUT
*/